{"version":3,"sources":["redux/constant/constants.js","components/SearchForm.js","redux/actions/action.js","components/singleData.js","components/ResultData.js","redux/state/state.js","redux/store.js","redux/reducer/reducer.js","App.js","index.js"],"names":["GET_DATA","ITEM_LOADING","connect","state","getQueryResult","queryData","dispatch","type","payload","keyWord","axios","post","then","res","data","result","useState","keyword","setKeyword","Grid","item","xs","style","margin","container","justify","spacing","sm","TextField","variant","fullWidth","label","size","value","onChange","e","target","Button","color","onClick","SingleData","Paper","elevation","padding","Typography","fontWeight","InformationComponent","text","queryKeyword","align","firstLoad","isLoading","queryResult","CircularProgress","length","map","qr","sf","ff","_id","initialState","middleware","thunk","store","createStore","action","compose","applyMiddleware","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.951d4365.chunk.js","sourcesContent":["export const GET_DATA = \"GET_DATA\";\nexport const ITEM_LOADING = \"ITEM_LOADING\";\nexport const ADD_DATA=\"ADD_DATA\"","import { Grid, TextField, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQueryResult } from \"../redux/actions/action\";\n\nconst SearchForm = ({ getQueryResult }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const handleSearchButton = () => {\n    getQueryResult({\n      queryData: keyword,\n    });\n    setKeyword(\"\");\n  };\n\n  return (\n    <>\n      <Grid item xs={10} style={{ margin: \"10px 0px\" }}>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              label=\"Search Box\"\n              size=\"small\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={4} sm={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSearchButton}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst mapStatetoProps = (state) => {\n  return {};\n};\n\nexport default connect(mapStatetoProps, { getQueryResult })(SearchForm);\n","import { GET_DATA, ITEM_LOADING } from \"../constant/constants\";\nimport axios from \"axios\";\n\nexport const getQueryResult = (queryData) => (dispatch) => {\n  dispatch({ type: ITEM_LOADING, payload: queryData.keyWord });\n  axios\n    .post(\"https://abbrserver.herokuapp.com/abbrserver/api/query\", queryData)\n    .then((res) => dispatch({ type: GET_DATA, payload: res.data.result }));\n};\n","import { Paper, Typography } from \"@material-ui/core\";\n\nconst SingleData = ({ data, value }) => {\n  return (\n    <>\n      <Paper\n        variant=\"elevation\"\n        elevation={1}\n        style={{ margin: \"5px 0px\", padding: \"5px\" }}\n      >\n        <Typography style={{ color: \"#085CAB\", fontWeight: \"bold\" }}>\n          {data} :\n        </Typography>\n        <Typography style={{ color: \"#BF2B03\" }}>{value}</Typography>\n      </Paper>\n    </>\n  );\n};\n\nexport default SingleData;\n","import { Grid, Paper, Typography, CircularProgress } from \"@material-ui/core\";\nimport SingleData from \"./singleData\";\nimport { connect } from \"react-redux\";\n\nconst InformationComponent = ({ text, queryKeyword }) => {\n  return (\n    <>\n      <Grid item xs={8}>\n        <Paper\n          variant=\"elevation\"\n          elevation={3}\n          style={{\n            margin: \"5px 0px\",\n            padding: \"5px\",\n          }}\n        >\n          <Typography align=\"center\"> {text}</Typography>\n          {queryKeyword ? (\n            <Typography align=\"center\" style={{ fontWeight: \"bold\" }}>\n              {queryKeyword}\n            </Typography>\n          ) : null}\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nconst ResultData = ({ firstLoad, isLoading, queryResult, queryKeyword }) => {\n  return firstLoad ? (\n    <InformationComponent text=\"Please search any keyword\" />\n  ) : isLoading ? (\n    <CircularProgress />\n  ) : queryResult.length === 0 ? (\n    <InformationComponent\n      text=\"no such keyword present\"\n      keyword={queryKeyword}\n    />\n  ) : (\n    <>\n      <Grid item xs={8}>\n        {queryResult.map((qr) => {\n          return (\n            <Grid item key={qr._id}>\n              <SingleData data={qr.sf} value={qr.ff} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    firstLoad: state.firstLoad,\n    isLoading: state.isLoading,\n    queryResult: state.queryResult,\n    queryKeyword: state.queryKeyword,\n  };\n};\n\nexport default connect(mapStateToProps)(ResultData);\n","export const initialState = {\n  isLoading: false,\n  queryResult: [],\n  queryKeyword: null,\n  firstLoad: true,\n};\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { abbrReducer } from \"./reducer/reducer\";\nimport thunk from \"redux-thunk\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  abbrReducer,\n  compose(\n    applyMiddleware(...middleware)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import { initialState } from \"../state/state\";\nimport { GET_DATA, ITEM_LOADING } from \"../constant/constants\";\n\nexport const abbrReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        queryResult: action.payload,\n        isLoading: false,\n      };\n    case ITEM_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        firstLoad: false,\n        queryKeyword: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import SearchForm from \"./components/SearchForm\";\nimport { Grid, CssBaseline } from \"@material-ui/core\";\nimport ResultData from \"./components/ResultData\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <CssBaseline />\n        <Grid container justify=\"center\">\n          <SearchForm />\n          <ResultData />\n        </Grid>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}